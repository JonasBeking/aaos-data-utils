{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport type {\n  VehicleDataService,\n  VehicleErrorEvent,\n  VehicleDataEvent,\n  RestrictedVehicleDataService,\n  PermissionStates\n} from \"./definitions\";\n\nexport abstract class VehicleDataProxy<VehicleDataEventType extends VehicleDataEvent, VehicleErrorEventType extends VehicleErrorEvent> {\n\n  protected dataService : VehicleDataService<VehicleDataEventType,VehicleErrorEventType>\n\n  protected constructor(dataService : VehicleDataService<VehicleDataEventType,VehicleErrorEventType>) {\n    this.dataService = dataService\n  }\n\n  generateActiveView(dataId : number, callback : (dataEvent : VehicleDataEventType | null, err? : any) => void, addressableName? : string) : Promise<void> {\n    return this.dataService.generateActiveView({\n      dataId : dataId,\n      addressableName: addressableName\n    },((dataEvent, err) => {\n      if(err) {\n        const errorEvent : VehicleErrorEventType = JSON.parse(err)\n\n        console.error(`Failed getting value for propertyId: ${dataId} - ${addressableName} due to ${err}`)\n        callback(dataEvent,errorEvent)\n      }\n      else{\n        console.debug(`Received value: ${JSON.stringify(dataEvent)} for propertyId: ${dataId} - ${addressableName}`)\n        callback(dataEvent)\n      }\n    })).then(() => {\n      console.debug(`Requested Active Property View for propertyId: ${dataId} - ${addressableName}`)\n    }).catch(errorEvent => {\n      console.error(`Failed registering Active Property View for propertyId: ${dataId} - ${addressableName}. Reason: ${errorEvent}`)\n      let throwable\n      try{\n        throwable = JSON.parse(errorEvent) as VehicleErrorEventType\n      } catch (e) {\n        throwable = errorEvent\n      }\n      throw throwable\n    })\n  }\n\n  generatePassiveView(dataId : number, addressableName? : string) : Promise<void> {\n    return this.dataService.generatePassiveView({\n      dataId : dataId,\n      addressableName: addressableName\n    }).then(() => {\n      console.debug(`Successfully registered Passive Property View for propertyId: ${dataId} - ${addressableName}`)\n    }).catch(errorEvent => {\n      console.error(`Failed registering Passive Property View for propertyId: ${dataId} - ${addressableName}. Reason: ${errorEvent}`)\n      let throwable\n      try{\n        throwable = JSON.parse(errorEvent) as VehicleErrorEventType\n      } catch (e) {\n        throwable = errorEvent\n      }\n      throw throwable\n    })\n  }\n\n  removeView(addressableName : string) : Promise<void> {\n    return this.dataService.removeView({\n      addressableName : addressableName\n    }).then(() => {\n      console.debug(`Removed View for ${addressableName}`)\n    }).catch(errorEvent => {\n      console.error(`Failed removing View for ${addressableName}. Reason: ${errorEvent}`)\n      let throwable\n      try{\n        throwable = JSON.parse(errorEvent) as VehicleErrorEventType\n      } catch (e) {\n        throwable = errorEvent\n      }\n      throw throwable\n    })\n  }\n\n  view(addressableName : string) : Promise<VehicleDataEventType | VehicleErrorEventType>{\n    return this.dataService.view({addressableName : addressableName}).then((event) => {\n      console.debug(`Received value: ${JSON.stringify(event)} for ${addressableName}`)\n      if(event.event === -1) {\n        return (event as VehicleErrorEventType)\n      }\n      else{\n        return (event as VehicleDataEventType)\n      }\n    }).catch(errorEvent => {\n      console.error(`Failed receiving value for ${addressableName}. Reason ${errorEvent}`)\n      let throwable\n      try{\n        throwable = JSON.parse(errorEvent) as VehicleErrorEventType\n      } catch (e) {\n        throwable = errorEvent\n      }\n      throw throwable\n    })\n  }\n\n  viewAll(addressableName : string) : Promise<(VehicleDataEventType | VehicleErrorEventType)[]>{\n    return this.dataService.viewAll({addressableName : addressableName}).then(({events}) => {\n      console.debug(`Received value: ${JSON.stringify(events)} for ${addressableName}`)\n      return events\n    }).catch(errorEvent => {\n      console.error(`Failed receiving value for ${addressableName}. Reason ${errorEvent}`)\n      let throwable\n      try{\n        throwable = JSON.parse(errorEvent) as VehicleErrorEventType\n      } catch (e) {\n        throwable = errorEvent\n      }\n      throw throwable\n    })\n  }\n}\n\nexport abstract class RestrictedVehicleDataProxy<VehicleDataEventType extends VehicleDataEvent,VehicleErrorEventType extends VehicleErrorEvent, PermissionType extends string> extends VehicleDataProxy<VehicleDataEventType,VehicleErrorEventType>{\n\n  dataService : RestrictedVehicleDataService<VehicleDataEventType,VehicleErrorEventType,PermissionType>\n\n  protected constructor(dataService : RestrictedVehicleDataService<VehicleDataEventType,VehicleErrorEventType,PermissionType>) {\n    super(dataService);\n    this.dataService = dataService;\n  }\n\n  checkPermissions(): Promise<PermissionStates<PermissionType>> {\n    return this.dataService.checkPermissions().then(permissionStatus => {\n      console.debug(`Current status of permissions: ${JSON.stringify(permissionStatus)}`)\n      return permissionStatus\n    }).catch(reason => {\n      console.error(`Failed checking current status for permissions. Reason: ${reason}`)\n      let throwable\n      try{\n        throwable = JSON.parse(reason) as VehicleErrorEventType\n      } catch (e) {\n        throwable = reason\n      }\n      throw throwable\n    })\n  }\n\n  requestPermissions(permissions: PermissionType[]): Promise<PermissionStates<PermissionType>> {\n    return this.dataService.requestPermissions({\n      permissions : permissions\n    }).then(permissionStatus => {\n      console.debug(`Current PermissionStatus: ${JSON.stringify(permissionStatus)}`)\n      return permissionStatus\n    }).catch(reason => {\n      console.error(`Failed requesting Permissions. Reason: ${reason}`)\n      let throwable\n      try{\n        throwable = JSON.parse(reason) as VehicleErrorEventType\n      } catch (e) {\n        throwable = reason\n      }\n      throw throwable\n    })\n  }\n}\n\nexport * from './definitions';\n"]}